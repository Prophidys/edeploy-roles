---
# file: roles/controller/tasks/main.yml

# Allow rsync to access all SElinux permissions
- seboolean: name=rsync_full_access state=yes persistent=yes
  tags: before_config

# Dirty hack to upgade /usr/sbin/edeploy before actual upgrade
# and benefit of rsync with attributes feature.
# Useful when running SElinux before J.1.0.0
- name: upgrade edeploy script
  copy: src=edeploy dest=/usr/sbin/edeploy mode=0755
  tags: before_config

- name: stop openstack services
  service: name={{ item }} state=stopped
  with_items:
    - "{{ webserver }}"
    - "{{ ceilometer_agent_notification }}"
    - "{{ ceilometer_alarm_evaluator }}"
    - "{{ ceilometer_alarm_notifier }}"
    - "{{ ceilometer_api }}"
    - "{{ ceilometer_collector }}"
    - "{{ cinder_api }}"
    - "{{ cinder_scheduler }}"
    - "{{ cinder_volume }}"
    - "{{ glance_api }}"
    - "{{ glance_registry }}"
    - "{{ heat_api_cfn }}"
    - "{{ heat_api_cloudwatch }}"
    - "{{ heat_api }}"
    - "{{ heat_engine }}"
    - "{{ keystone }}"
    - "{{ neutron_server }}"
    - "{{ nova_api }}"
    - "{{ nova_cert }}"
    - "{{ nova_conductor }}"
    - "{{ nova_consoleauth }}"
    - "{{ nova_scheduler }}"
    - "{{ nova_spicehtml5proxy }}"
    - "{{ swift_proxy }}"
  tags: before_config

# MongoDB is upgraded in RHEL7
- name: stop mongodb
  service: name=mongod state=stopped
  tags: before_config
  when: ansible_distribution == 'RedHat'

- name: manage erlang_cookie migration in RabbitMQ
  script: rabbitmq-upgrade.sh {{ erlang_cookie }}
  tags: before_config

# RabbitMQ is upgraded in RHEL7
# This case is when erlang_cookie has been provided and is the same already in place.
- name: stop rabbitmq-server
  service: name=rabbitmq-server state=stopped
  tags: before_config
  when: ansible_distribution == 'RedHat'

# MySQL is upgraded in RHEL7
# since we don't know if the node is master or not, we stop mysql anyway
- name: stop mysql
  service: name={{ item }} state=stopped
  with_items:
    - mysqld
    - mysql-boostrap
  tags: before_config
  ignore_errors: yes
  when: ansible_distribution == 'RedHat'

- name: edeploy upgrade
  edeploy: command=upgrade version={{ distro }}-{{ version }}
  tags: before_config

- name: bootstrap mysql cluster again
  service: name=mysql-bootstrap state=restarted
  tags: before_config
  when: ansible_distribution == 'RedHat' and inventory_hostname == groups['controller'][-1]

- name: start rabbitmq
  service: name=rabbitmq-server state=started
  tags: before_config
  when: inventory_hostname == groups['controller'][-1]

- name: start mongodb
  service: name=mongod state=started
  tags: before_config
  when: ansible_distribution == 'RedHat'

- name: purge keystone old tokens
  command: keystone-manage token_flush
  tags: before_config
  when: inventory_hostname == groups['controller'][0]

- name: update keystone database
  command: keystone-manage db_sync
  tags: before_config
  when: inventory_hostname == groups['controller'][0]

- name: start keystone service
  service: name={{ keystone }} state=started
  tags: before_config

- name: start swift proxy service
  service: name={{ swift_proxy }} state=started
  tags: before_config

- ini_file: dest=/etc/glance/glance-api.conf
            section=DEFAULT
            option=known_stores
            value=rbd
  tags: before_config

- name: update glance database
  command: glance-manage db_sync
  tags: before_config
  when: inventory_hostname == groups['controller'][0]

- name: start glance services
  service: name={{ item }} state=started
  with_items:
    - "{{ glance_api }}"
    - "{{ glance_registry }}"
  tags: before_config

- name: update cinder database
  command: cinder-manage db sync
  tags: before_config
  when: inventory_hostname == groups['controller'][0]

- name: start cinder services
  service: name={{ item }} state=started
  with_items:
    - "{{ cinder_api }}"
    - "{{ cinder_scheduler }}"
    - "{{ cinder_volume }}"
  tags: before_config

- name: update neutron database
  command: neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head
  tags: before_config
  when: inventory_hostname == groups['controller'][0]

- name: start neutron server service
  service: name={{ neutron_server }} state=started
  tags: before_config

- name: update heat database
  command: heat-manage --config-file /etc/heat/heat.conf db_sync
  tags: before_config
  when: inventory_hostname == groups['controller'][0]

- name: start heat services
  service: name={{ item }} state=started
  with_items:
    - "{{ heat_api }}"
    - "{{ heat_api_cfn }}"
    - "{{ heat_api_cloudwatch }}"
    - "{{ heat_engine }}"
  tags: before_config

- name: start ceilometer services
  service: name={{ item }} state=started
  with_items:
    - "{{ ceilometer_agent_notification }}"
    - "{{ ceilometer_alarm_evaluator }}"
    - "{{ ceilometer_alarm_notifier }}"
    - "{{ ceilometer_api }}"
    - "{{ ceilometer_collector }}"
  tags: before_config

- name: restart ceilometer-agent-central managed by pacemaker
  command: crm resource cleanup ceilometer-agent-central
  tags: before_config
  when: ansible_distribution == 'Debian' and inventory_hostname == groups['controller'][-1]

- name: restart ceilometer-agent-central managed by pacemaker
  command: pcs resource cleanup openstack-ceilometer-central
  tags: before_config
  when: ansible_distribution == 'RedHat' and inventory_hostname == groups['controller'][-1]

- name: start apache2 service
  service: name={{ webserver }} state=started
  tags: before_config

- name: update nova database
  command: nova-manage db sync
  tags: before_config
  when: inventory_hostname == groups['controller'][-1]

# Cap the compute RPC API at a version that will still be understood by your Icehouse compute nodes
- ini_file: dest=/etc/nova.conf
            section=upgrade_levels
            option=compute
            value=icehouse
  tags: before_config

# we don't restart nova-spicehtml5 because it's dropped in J.1.0.0
- name: start nova services
  service: name={{ item }} state=started
  with_items:
    - "{{ nova_api }}"
    - "{{ nova_cert }}"
    - "{{ nova_conductor }}"
    - "{{ nova_consoleauth }}"
    - "{{ nova_scheduler }}"
  tags: before_config

- name: Ensure old puppet ssl files are removed
  file: path=/var/lib/puppet/ssl state=absent
  tags: before_config

# Clean-up nova config by deleting the option, not useful anymore
- ini_file: dest=/etc/nova.conf
            section=upgrade_levels
            option=compute
  tags: after_config

- name: restart nova services and neutron-server
  service: name={{ item }} state=restarted
  with_items:
    - "{{ nova_api }}"
    - "{{ nova_cert }}"
    - "{{ nova_conductor }}"
    - "{{ nova_consoleauth }}"
    - "{{ nova_scheduler }}"
    - "{{ neutron_server }}"
  tags: after_config
